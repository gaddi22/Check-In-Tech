/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.checknscan.checkntech;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/** Purpose is to create AdminDashboard for the Check N Tech Application.
 *
 * @author Alexander Duncan
 */
public class AdminDashboard extends javax.swing.JFrame {

    private static String selectedEventName = ""; // Used for the Event Roster Manager
    
    /**
     * Creates new form AdminDash
     */
    public AdminDashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerBanner = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        eventViewerPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventDashTable = new javax.swing.JTable();
        viewerPaneHeader = new javax.swing.JPanel();
        eventViewerTitle = new javax.swing.JLabel();
        eventPrevPanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        eventInfoHeader = new javax.swing.JPanel();
        eventInfoTitle = new javax.swing.JLabel();
        startTimeField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        startTimeLabel = new javax.swing.JLabel();
        endTimeLabel = new javax.swing.JLabel();
        endTimeField = new javax.swing.JTextField();
        rosterLabel = new javax.swing.JLabel();
        rosterNumField = new javax.swing.JTextField();
        modifyRosterButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        navigationBar = new javax.swing.JPanel();
        manageEventsButton = new javax.swing.JButton();
        manageAccountsButton = new javax.swing.JButton();
        manageRosterEvents = new javax.swing.JButton();
        userDashboardButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerBanner.setBackground(new java.awt.Color(255, 102, 51));
        headerBanner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        headerBanner.setPreferredSize(new java.awt.Dimension(2, 65));

        logoutButton.setText("Logout");
        logoutButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Welcome");

        username.setEditable(false);
        username.setBackground(new java.awt.Color(255, 102, 51));
        username.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setText(getUsername());
        username.setBorder(null);

        javax.swing.GroupLayout headerBannerLayout = new javax.swing.GroupLayout(headerBanner);
        headerBanner.setLayout(headerBannerLayout);
        headerBannerLayout.setHorizontalGroup(
            headerBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerBannerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 574, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerBannerLayout.setVerticalGroup(
            headerBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerBannerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(headerBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        eventViewerPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        eventDashTable.setAutoCreateRowSorter(true);
        eventDashTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"COSC 4336",  new Long(20200206), "1400"},
                {"MATH 3226",  new Long(20200331), "1500"},
                {"COSC 3445",  new Long(20200721), "1300"}
            },
            new String [] {
                "Event Name", "Date", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        eventDashTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eventDashTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(eventDashTable);

        viewerPaneHeader.setBackground(new java.awt.Color(255, 102, 51));
        viewerPaneHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        eventViewerTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        eventViewerTitle.setForeground(new java.awt.Color(255, 255, 255));
        eventViewerTitle.setText("Upcoming Events");

        javax.swing.GroupLayout viewerPaneHeaderLayout = new javax.swing.GroupLayout(viewerPaneHeader);
        viewerPaneHeader.setLayout(viewerPaneHeaderLayout);
        viewerPaneHeaderLayout.setHorizontalGroup(
            viewerPaneHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewerPaneHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eventViewerTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewerPaneHeaderLayout.setVerticalGroup(
            viewerPaneHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewerPaneHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eventViewerTitle)
                .addContainerGap())
        );

        eventPrevPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        eventPrevPanel.setMinimumSize(new java.awt.Dimension(349, 315));

        nameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameField.setText("Event Name");

        eventInfoHeader.setBackground(new java.awt.Color(255, 102, 51));
        eventInfoHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        eventInfoTitle.setFont(eventInfoTitle.getFont().deriveFont(eventInfoTitle.getFont().getStyle() | java.awt.Font.BOLD, eventInfoTitle.getFont().getSize()+8));
        eventInfoTitle.setForeground(new java.awt.Color(255, 255, 255));
        eventInfoTitle.setText("Selected Event Information");

        javax.swing.GroupLayout eventInfoHeaderLayout = new javax.swing.GroupLayout(eventInfoHeader);
        eventInfoHeader.setLayout(eventInfoHeaderLayout);
        eventInfoHeaderLayout.setHorizontalGroup(
            eventInfoHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventInfoHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eventInfoTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        eventInfoHeaderLayout.setVerticalGroup(
            eventInfoHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventInfoHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eventInfoTitle)
                .addContainerGap())
        );

        startTimeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        startTimeField.setText("hhmm");
        startTimeField.setToolTipText("hhmm");

        nameLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameLabel.setText("Name:");

        startTimeLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        startTimeLabel.setText("Start Time:");

        endTimeLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        endTimeLabel.setText("End Time:");

        endTimeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        endTimeField.setText("hhmm");
        endTimeField.setToolTipText("hhmm");

        rosterLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rosterLabel.setText("Total Roster: ");

        rosterNumField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rosterNumField.setText("##");

        modifyRosterButton.setText("Roster");
        modifyRosterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyRosterButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        dateLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dateLabel.setText("Date:");

        dateField.setText("yyyy-mm-dd");

        javax.swing.GroupLayout eventPrevPanelLayout = new javax.swing.GroupLayout(eventPrevPanel);
        eventPrevPanel.setLayout(eventPrevPanelLayout);
        eventPrevPanelLayout.setHorizontalGroup(
            eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eventInfoHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(eventPrevPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventPrevPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyRosterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(eventPrevPanelLayout.createSequentialGroup()
                        .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, eventPrevPanelLayout.createSequentialGroup()
                                .addComponent(startTimeLabel)
                                .addGap(18, 18, 18)
                                .addComponent(startTimeField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, eventPrevPanelLayout.createSequentialGroup()
                                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel)
                                    .addComponent(endTimeLabel)
                                    .addComponent(rosterLabel)
                                    .addComponent(dateLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rosterNumField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endTimeField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(dateField, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        eventPrevPanelLayout.setVerticalGroup(
            eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventPrevPanelLayout.createSequentialGroup()
                .addComponent(eventInfoHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(21, 21, 21)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTimeLabel)
                    .addComponent(startTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endTimeLabel))
                .addGap(18, 18, 18)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rosterNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rosterLabel))
                .addGap(35, 35, 35)
                .addGroup(eventPrevPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyRosterButton)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout eventViewerPaneLayout = new javax.swing.GroupLayout(eventViewerPane);
        eventViewerPane.setLayout(eventViewerPaneLayout);
        eventViewerPaneLayout.setHorizontalGroup(
            eventViewerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventViewerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventPrevPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(viewerPaneHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        eventViewerPaneLayout.setVerticalGroup(
            eventViewerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventViewerPaneLayout.createSequentialGroup()
                .addComponent(viewerPaneHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(eventViewerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(eventViewerPaneLayout.createSequentialGroup()
                        .addComponent(eventPrevPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        navigationBar.setBackground(new java.awt.Color(255, 255, 204));
        navigationBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        manageEventsButton.setText("Manage Events");
        manageEventsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEventsButtonActionPerformed(evt);
            }
        });

        manageAccountsButton.setText("Manage Accounts");
        manageAccountsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageAccountsButtonActionPerformed(evt);
            }
        });

        manageRosterEvents.setText("Manage Roster");
        manageRosterEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageRosterEventsActionPerformed(evt);
            }
        });

        userDashboardButton.setText("User Dashboard");
        userDashboardButton.setToolTipText("Return to dashboard.");
        userDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDashboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navigationBarLayout = new javax.swing.GroupLayout(navigationBar);
        navigationBar.setLayout(navigationBarLayout);
        navigationBarLayout.setHorizontalGroup(
            navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(manageEventsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(manageRosterEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(manageAccountsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userDashboardButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        navigationBarLayout.setVerticalGroup(
            navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageAccountsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageEventsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageRosterEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerBanner, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(navigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventViewerPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventViewerPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(navigationBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Logs the user out. Program returns to homepage.
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        new HomePage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    // Opens the Account Manager
    private void manageAccountsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageAccountsButtonActionPerformed
        new UserAccounts().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_manageAccountsButtonActionPerformed

    // Opens the Event Manager.
    private void manageEventsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEventsButtonActionPerformed
        new EventManager().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_manageEventsButtonActionPerformed

    // Opens the User Dashboard.
    private void userDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDashboardButtonActionPerformed
        new AdminDashboard().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_userDashboardButtonActionPerformed
    
    // Opens the Event Roster Manager.
    // Need to establish a an event is selected before Event Roster Manager Opens
    private void manageRosterEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageRosterEventsActionPerformed
        new RosterManager().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_manageRosterEventsActionPerformed
    
    // Action listener to clear the detailed information form.
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        nameField.setText("");
        dateField.setText("");
        startTimeField.setText("");
        endTimeField.setText("");
        rosterNumField.setText("");
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Save/Update new event to database.
    // Needs to verify date format. The field takes in a String. Also needs to verify the event doesn't exist already in the database.
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // Verifies startTimeField is an int. 
        /* boolean isInt = true;
        try {
            Integer.parseInt(startTimeField.getText());
            isInt = true;
        }
        catch (NumberFormatException e) {
            isInt = false;
        }
        
        // If startTimeField is int, adds the event to the table.
        if (isInt){
            Object [] addEvent = {nameField.getText(), dateField.getText(), startTimeField.getText()};
            DefaultTableModel model = (DefaultTableModel) eventDashTable.getModel();
            model.addRow(addEvent);
        }
        else {
            javax.swing.JOptionPane.showMessageDialog(null, "Time must be formated HHMM");
        } */
        DBConnector.createEvent(nameField.getText(), dateField.getText(), startTimeField.getText(), endTimeField.getText());
    }//GEN-LAST:event_saveButtonActionPerformed

    // Opens the specified Event's Roster Page. Will need to access the database to find the roster.
    private void modifyRosterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyRosterButtonActionPerformed
        new EventRosterManager().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_modifyRosterButtonActionPerformed

    // Displays selected event from the table in the detailed information pane. 
    private void eventDashTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventDashTableMousePressed
        TableModel model = (DefaultTableModel) eventDashTable.getModel();
        int [] indexs = eventDashTable.getSelectedRows();
        Object [] selectedRow = new Object [3];
        for(int i = 0; i <indexs.length; i++){
            selectedRow[0] = model.getValueAt(indexs[i], 0);
            selectedRow[1] = model.getValueAt(indexs[i], 1);
            selectedRow[2] = model.getValueAt(indexs[i], 2);
        }
        
        // Start time is already located within the table. 
        Integer startTime = Integer.parseInt(selectedRow[2].toString()); 
        // End time will need to be retrieved from the database. For now it is taking the startTime and adding an hour. *Military Time*
        Integer endTime = Integer.parseInt(selectedRow[2].toString())+100;
        
        nameField.setText(selectedRow[0].toString());
        dateField.setText(selectedRow[1].toString());
        startTimeField.setText(startTime.toString());
        endTimeField.setText(endTime.toString());
        rosterNumField.setText("00"); // 
    }//GEN-LAST:event_eventDashTableMousePressed

    // Sets login name next to "Welcome" in the title of the DashboardScreen.
    private String getUsername(){
        return LoginScreen.getUsername();
    }
    
    /** Builds the GUI for the AdminDashboard.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Main variables used within the EventManager frame.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField endTimeField;
    private javax.swing.JLabel endTimeLabel;
    private javax.swing.JTable eventDashTable;
    private javax.swing.JPanel eventInfoHeader;
    private javax.swing.JLabel eventInfoTitle;
    private javax.swing.JPanel eventPrevPanel;
    private javax.swing.JPanel eventViewerPane;
    private javax.swing.JLabel eventViewerTitle;
    private javax.swing.JPanel headerBanner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton manageAccountsButton;
    private javax.swing.JButton manageEventsButton;
    private javax.swing.JButton manageRosterEvents;
    private javax.swing.JButton modifyRosterButton;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    protected javax.swing.JPanel navigationBar;
    private javax.swing.JLabel rosterLabel;
    private javax.swing.JTextField rosterNumField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField startTimeField;
    private javax.swing.JLabel startTimeLabel;
    private javax.swing.JButton userDashboardButton;
    private javax.swing.JTextField username;
    private javax.swing.JPanel viewerPaneHeader;
    // End of variables declaration//GEN-END:variables

}
